import { KubernetesObject } from "@kubernetes/client-node";
import { WatchPhase } from "kubernetes-fluent-client/dist/fluent/types";
/**
 * Queue is a FIFO queue for reconciling
 */
export declare class Queue<K extends KubernetesObject> {
    #private;
    constructor();
    setReconcile(reconcile: (obj: KubernetesObject, type: WatchPhase) => Promise<void>): void;
    /**
     * Enqueue adds an item to the queue and returns a promise that resolves when the item is
     * reconciled.
     *
     * @param item The object to reconcile
     * @returns A promise that resolves when the object is reconciled
     */
    enqueue(item: K, type: WatchPhase): Promise<void>;
}
//# sourceMappingURL=queue.d.ts.map